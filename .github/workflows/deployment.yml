name: DevOps Pipeline Production

on:
  push:
    branches:
      - main

jobs:
  delivery:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Pull the latest staging image
      - name: Pull Docker image from GHCR (staging)
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker pull ghcr.io/$REPO_NAME:staging

      # Tag and push Docker image as production
      - name: Tag and Push Docker image as production
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker tag ghcr.io/$REPO_NAME:staging ghcr.io/$REPO_NAME:production
          docker push ghcr.io/$REPO_NAME:production

      # Upload files to production server    
      - name: Deliver Docker Compose file to production
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          script: |
            # Navigate to the dowa directory
            cd dowa
            
            # Print out the directory contents to confirm the files are present
            echo "Listing contents of dowa directory:"
            ls -l
            
            # Check if both docker-compose files are present
            if [ -f docker-compose.yaml ] && [ -f docker-compose.prod.yaml ]; then
              echo "Docker Compose files found, starting services..."
              # Run Docker Compose with both configuration files
              docker compose -f docker-compose.yaml -f docker-compose.prod.yaml up -d
            else
              echo "Error: Docker Compose files are missing!"
              exit 1
            fi


      - name: Run Docker Compose on production server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          script: |
            cd dowa
            docker compose pull
            docker compose up -d
