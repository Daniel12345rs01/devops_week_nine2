name: DevOps Pipeline

on:
  push:
    branches:
      - main

jobs:
  delivery:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Generate version from commits and tags
      - name: Application Version
        id: server-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          branch: main
          tag_prefix: ""
          major_pattern: "major:"
          minor_pattern: "minor:"
          bump_each_commit_patch_pattern: "fix:"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          enable_prerelease_mode: false

      # Check if version tag already exists
      - name: Check if tag exists
        id: check_tag_exists
        run: |
          TAG="${{ steps.server-app.outputs.version }}"
          git fetch --tags
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists, incrementing patch version"
            TAG="${{ steps.server-app.outputs.version }}.1"
          fi
          echo "New Tag: $TAG"
          echo "tag_name=$TAG" >> $GITHUB_ENV

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Build and push Docker image
      - name: Build and Push Docker image
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')

          docker build \
            -t ghcr.io/$REPO_NAME:staging \
            -t ghcr.io/$REPO_NAME:${{ steps.server-app.outputs.version }} \
            -f DevOpsWebApplication/Dockerfile \
            .
          docker push ghcr.io/$REPO_NAME --all-tags
      # Create release notes
      - name: Create release notes
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.server-app.outputs.version }}
          generateReleaseNotes: true
          body: |
            This release includes the following container image:
            http://ghcr.io/${{ github.repository }}:${{ steps.server-app.outputs.version }}
          token: ${{ secrets.GHCR_PAT }}
      
      # Upload file to staging server    
      - name: Deliver Docker Compose file to staging
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "docker-compose.yaml"
          target: dowa/

      - name: Run Docker Compose on staging server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            cd dowa
            docker compose pull
            docker compose up -d